[2022-01-25T20:58:42.283Z]	<Manu_Sporny>	present+
[2022-01-25T20:59:04.038Z]	<Dmitri_Zagidulin>	present+
[2022-01-25T21:00:29.981Z]	<mprorock>	present+
[2022-01-25T21:00:35.662Z]	<Markus_Sabadello>	present+
[2022-01-25T21:00:45.212Z]	<Kerri_Lemoie>	present+
[2022-01-25T21:01:12.133Z]	<Dmitri_Zagidulin>	present+
[2022-01-25T21:01:25.301Z]	<Rolson_Quadras>	present+
[2022-01-25T21:01:42.462Z]	<Markus_Sabadello>	present+
[2022-01-25T21:02:04.223Z]	<Brian_Richter>	present+
[2022-01-25T21:02:54.887Z]	<TallTed_//_Ted_Thibodeau_(he/him)_(OpenLinkSw.com)>	present+
[2022-01-25T21:03:23.904Z]	<Phil_L_(P1)>	present+
[2022-01-25T21:04:04.972Z]	<Transcriber>	Meeting: vcapi
[2022-01-25T21:04:44.905Z]	<Transcriber>	Meeting: vcapi
[2022-01-25T21:04:45.200Z]	<Eric_Schuh>	present+
[2022-01-25T21:04:58.295Z]	<Joe_Andrieu>	present+
[2022-01-25T21:05:15.370Z]	<BrentZ>	present+
[2022-01-25T21:05:16.028Z]	<Joe_Andrieu>	present+
[2022-01-25T21:05:22.797Z]	<manu>	scribe: mprorock
[2022-01-25T21:05:32.641Z]	<manu>	Agenda: https://lists.w3.org/Archives/Public/public-credentials/2022Jan/0188.html
[2022-01-25T21:05:35.274Z]	<by_caballero>	present+
[2022-01-25T21:05:35.679Z]	<mprorock>	topic: Agenda Review
[2022-01-25T21:05:51.424Z]	<mprorock>	manu: review, intros, interop testing plan for 2022
[2022-01-25T21:05:54.953Z]	<Juan_Caballero_(Spruce)>	present+
[2022-01-25T21:06:14.910Z]	<mprorock>	... extension of main call, but obviously focused on VC-API directly
[2022-01-25T21:06:28.489Z]	<Brian_Richter>	present+
[2022-01-25T21:06:45.570Z]	<Markus_Sabadello>	present+
[2022-01-25T21:06:49.012Z]	<mprorock>	... any updates or changes to agenda?
[2022-01-25T21:06:59.548Z]	<mprorock>	... none - getting started
[2022-01-25T21:07:02.053Z]	<manu>	Topic: Introductions, Relevant Community Updates
[2022-01-25T21:07:04.522Z]	<Phil_(T3)>	present+
[2022-01-25T21:07:24.411Z]	<Juan_Caballero_(Spruce)>	present+
[2022-01-25T21:07:45.223Z]	<Markus_Sabadello>	present+
[2022-01-25T21:07:49.679Z]	<mprorock>	manu: any relevant updates?
[2022-01-25T21:08:04.254Z]	<mprorock>	joe: can you hear me now?
[2022-01-25T21:08:11.685Z]	<Tobias_Looker>	present+
[2022-01-25T21:08:12.846Z]	<mprorock>	... rebooting web of trust feb 17
[2022-01-25T21:08:21.951Z]	<Adrian_Gropper>	present+
[2022-01-25T21:08:26.289Z]	<mprorock>	... visioning exercise - life in 2052
[2022-01-25T21:08:43.076Z]	<Tobias_Looker>	present+
[2022-01-25T21:09:07.074Z]	<mprorock>	manu: note that VC 1.1 passed and is now official updated rec
[2022-01-25T21:09:14.197Z]	<Markus_Sabadello>	present+
[2022-01-25T21:09:15.931Z]	<Phil_(T3)>	Woohoo!
[2022-01-25T21:09:18.724Z]	<mprorock>	... comments, but no FOs
[2022-01-25T21:09:21.042Z]	<mprorock>	q?
[2022-01-25T21:09:26.124Z]	<Joe_Andrieu>	Rebooting Salon: https://outofthebox2052.eventbrite.com
[2022-01-25T21:09:26.730Z]	<mprorock>	q+
[2022-01-25T21:10:08.938Z]	<Andy_Miller>	present+
[2022-01-25T21:10:39.390Z]	<Juan_Caballero_(Spruce)>	present+
[2022-01-25T21:10:39.747Z]	<Andy_Miller>	present+
[2022-01-25T21:10:40.217Z]	<mprorock>	manu: brent what is timeline on VC WG - waiting on FOs, etc
[2022-01-25T21:10:40.918Z]	<manu>	mprorock: Questions on VCWG 2.0 WG? What's happening there?
[2022-01-25T21:11:07.113Z]	<mprorock>	brentz: moving ahead, tidying up draft charter, then will be moving forward once feedback is in
[2022-01-25T21:11:09.787Z]	<Markus_Sabadello>	present+
[2022-01-25T21:11:36.184Z]	<mprorock>	... were waiting on FOs, but since no movement there, pressing ahead
[2022-01-25T21:11:40.642Z]	<manu>	Topic: Interoperability Testing Plan 2022
[2022-01-25T21:11:55.179Z]	<Tobias_Looker>	present+
[2022-01-25T21:12:03.953Z]	<mprorock>	manu: VC-API focused test plan for demonstrating interop
[2022-01-25T21:12:06.321Z]	<Markus_Sabadello>	present+
[2022-01-25T21:12:35.637Z]	<mprorock>	... call this morning covered trace approach for test and interop, full business flows, etc
[2022-01-25T21:12:44.230Z]	<Markus_Sabadello>	present+
[2022-01-25T21:12:45.437Z]	<mprorock>	... using postman against the VC-API
[2022-01-25T21:13:05.923Z]	<mprorock>	... DHS SVIP will be running interop tests focused on requirements there
[2022-01-25T21:13:25.895Z]	<Troy_Ronda>	present+
[2022-01-25T21:13:45.671Z]	<mprorock>	... movement by vendors to implement test and test suites to test other capabilites and interop via the VC-API
[2022-01-25T21:14:03.812Z]	<mprorock>	... one type of testing is type of credential focused
[2022-01-25T21:14:13.291Z]	<mprorock>	... also end to end testing such as in trace
[2022-01-25T21:14:57.515Z]	<mprorock>	... and testing using VC-API on / or with crypto suites as under discussion for VC 2.0 WG
[2022-01-25T21:15:18.420Z]	<mprorock>	... one area that will be added to by DB
[2022-01-25T21:15:40.802Z]	<mprorock>	... focused on ed25519 from DB, others may pick up other crypto suites
[2022-01-25T21:15:52.496Z]	<mprorock>	... other side is features such as status list 2021
[2022-01-25T21:16:10.369Z]	<mprorock>	... finally credential refresh using VC-API
[2022-01-25T21:16:14.655Z]	<Markus_Sabadello>	present+
[2022-01-25T21:16:32.366Z]	<mprorock>	q?
[2022-01-25T21:16:45.333Z]	<manu>	ack mpro
[2022-01-25T21:17:21.032Z]	<manu>	mprorock: One thing I wanted to note, in interest of not duplicating work, we'll (on the Trace Side) as we clarify requirements from broader Trade community... GS1, etc... we'll likely want to use VC API to test
[2022-01-25T21:17:53.102Z]	<manu>	mprorock: Like testing cryptosuites, expected inputs, expected response, etc. Here's something that doesn't conform, etc. Likewise for testing stuff like status list and making sure things behave as expected.
[2022-01-25T21:18:25.782Z]	<Phil_(T3)>	To what extent is the test suites used by the SVIP PlugFest code that can be used for at least credential interop testing?
[2022-01-25T21:18:27.308Z]	<manu>	mprorock: I expect those to come in as individual modules for those features? Is there a way to agree on "test module entry" "test module exist" "test outputs", etc? To help one deduplicate something else. Roll up test results across test suites.
[2022-01-25T21:18:31.335Z]	<manu>	q+
[2022-01-25T21:18:52.545Z]	<Markus_Sabadello>	present+
[2022-01-25T21:19:01.492Z]	<Dmitri_Zagidulin>	present+
[2022-01-25T21:19:07.741Z]	<Adrian_Gropper>	present+
[2022-01-25T21:19:12.405Z]	<Brian_Richter>	present+
[2022-01-25T21:19:30.552Z]	<Dmitri_Zagidulin>	present+
[2022-01-25T21:19:41.921Z]	<mprorock>	manu: SVIP stuff should be built fairly generic with some overlap
[2022-01-25T21:19:49.905Z]	<Phil_(T3)>	Understood
[2022-01-25T21:19:52.835Z]	<mprorock>	manu: unknown at moment
[2022-01-25T21:20:20.393Z]	<mprorock>	manu: crux of this issue is identify a common path
[2022-01-25T21:20:38.909Z]	<mprorock>	... wish there was a common reporting format that met our needs
[2022-01-25T21:20:51.473Z]	<Markus_Sabadello>	present+
[2022-01-25T21:20:56.142Z]	<mprorock>	... not sure that EARL will meet our needs here
[2022-01-25T21:21:01.921Z]	<Troy_Ronda>	present+
[2022-01-25T21:21:08.890Z]	<mprorock>	... test the web reporting is very browser centric
[2022-01-25T21:21:24.223Z]	<mprorock>	q+ to ask about NIST csv format?
[2022-01-25T21:21:40.535Z]	<mprorock>	... mocha test, postman test output now
[2022-01-25T21:21:49.967Z]	<mprorock>	... need to look and see if we can align outputs
[2022-01-25T21:21:51.289Z]	<manu>	ack manu
[2022-01-25T21:21:54.074Z]	<manu>	ack mpro
[2022-01-25T21:22:10.596Z]	<Troy_Ronda>	present+
[2022-01-25T21:22:32.698Z]	<manu>	mprorock: Yeah, I think it's helpful, kinda way I'm thinking, based on test reference implementations, we're going to see tests written in mocha/jest/junit -- can we agree on output format where you want to cross-compare, here's the format we want to map formats to?
[2022-01-25T21:22:39.370Z]	<Markus_Sabadello>	present+
[2022-01-25T21:23:32.352Z]	<Markus_Sabadello>	<-- We're going to work on a DID Resolution test suite in SVIP, but I don't think I can talk about it since I get kicked out of the meeting all the time..
[2022-01-25T21:23:39.036Z]	<manu>	mprorock: Depending on framework for testing, that might be easier/harder -- having audio issues for main call today -- timeliness of CSV output format, for privacy, those related issues for testing/assurance -- self attestation, kinda generalized format, using that as a model might not be the worst model -- or maybe JSON vocab that maps? Might not be perfect, but as you said, iteration towards some kind of common format.
[2022-01-25T21:24:04.520Z]	<Marty_Reed>	present+
[2022-01-25T21:24:04.619Z]	<Markus_Sabadello>	present+
[2022-01-25T21:24:15.501Z]	<mprorock>	manu: markus - can you speak to did test format
[2022-01-25T21:24:44.022Z]	<mprorock>	markus: did resolution test suite in progress to extend beyond syntax and data model testing
[2022-01-25T21:25:06.779Z]	<Markus_Sabadello>	present+
[2022-01-25T21:25:43.917Z]	<Juan_Caballero_(Spruce)>	vc TS: vcapi TS :: did TS: did-resol TS
[2022-01-25T21:25:48.765Z]	<mprorock>	... similar to VC and VC-API test suite will try and follow a similar pattern
[2022-01-25T21:25:49.384Z]	<Markus_Sabadello>	present+
[2022-01-25T21:25:50.540Z]	<mprorock>	NIST spec I was referring to: https://csrc.nist.gov/publications/detail/sp/800-53/rev-5/final
[2022-01-25T21:25:59.770Z]	<mprorock>	@markus - is that being done in junit?
[2022-01-25T21:26:30.630Z]	<mprorock>	manu: broad ecosystem interop test vs. now what can you do once you have implemented that
[2022-01-25T21:26:34.079Z]	<manu>	q+ on "tests against a spec" vs. "test against another vendor"
[2022-01-25T21:26:38.401Z]	<manu>	ack manu
[2022-01-25T21:27:13.886Z]	<mprorock>	manu: types of test have been basically against the VC spec and the DID spec - running those is testing against spec, not against vendor
[2022-01-25T21:27:32.917Z]	<mprorock>	... vendor to vendor is very diff than spec testing
[2022-01-25T21:27:46.781Z]	<mprorock>	... even browser tests are very browser specific
[2022-01-25T21:28:10.941Z]	<mprorock>	... this is much more complicated - which is output of one vendor as input to another
[2022-01-25T21:28:20.912Z]	<mprorock>	... a lot of these test langugages don't focus on that
[2022-01-25T21:28:36.228Z]	<mprorock>	... does postman work with that kind of NxN matrix stuff?
[2022-01-25T21:28:54.031Z]	<mprorock>	q+
[2022-01-25T21:29:08.412Z]	<mprorock>	is there a format for that in ... postman
[2022-01-25T21:29:08.636Z]	<manu>	ack mprorock
[2022-01-25T21:29:39.560Z]	<Markus_Sabadello>	present+
[2022-01-25T21:29:56.200Z]	<manu>	mprorock: I think you're calling out an important thing -- testing in general, a couple of things that go on -- unit testing, core function testing, sometimes related, sometimes not... spec testing -- VC API in some way, simplifies some aspects of that.
[2022-01-25T21:30:19.149Z]	<Markus_Sabadello>	present+
[2022-01-25T21:30:36.840Z]	<manu>	mprorock: We're defining VC API as Open API Specification, postman is built so that you have open API specification, generate those tests against that API if it's defined, run it so it's automated, from conformance standpoint, do it across collection of information.
[2022-01-25T21:30:56.197Z]	<manu>	mprorock: Could be a list of servers, loop through vendors, run tests against all vendors. So, that's item 1
[2022-01-25T21:31:15.439Z]	<manu>	mprorock: From an API conformance testing perspective, postman/newman really shines best there. Document and test APIs and conformance to APIs.
[2022-01-25T21:31:45.725Z]	<manu>	mprorock: The second piece, the NxN side, the moment you do that, you introduce somewhere, on test runner side, some notion of state -- cache information in some scope, use output from one API call against another.
[2022-01-25T21:32:28.219Z]	<manu>	mprorock: In case of NxN testing, take output of one REST call, input to next REST call -- what should it have done -- postman gives you ability to define that you may want to execute second call, third, whatever you happen to be on in test set.... what server or vendor you're testing against.
[2022-01-25T21:33:40.033Z]	<manu>	mprorock: In one test run, walk through practical example, issue VC against DB, then go sign presentation against Transmute or Spruce, do appropriate call with that VC against other API, what's happening behind the scenes, variables defined in postman... what is server/baseURL -- but not API endpoint,d efined as part of API -- so you can't fake the test. We saw this happen last year with VC API tests -- issue at different path, test allows you to specify
[2022-01-25T21:33:40.105Z]	<manu>	path... wasn't checking conformance w/ API itself
[2022-01-25T21:34:09.102Z]	<manu>	mprorock: It was just saying -- take data, pass it into endpoint, you have to make sure test suite you're doing, that it accounts for those sorts of issues -- one of benefits for test framework that is API oriented.
[2022-01-25T21:35:16.422Z]	<manu>	mprorock: When we think about profiles on top of this stuff -- postman will not test well some things -- separate test suite, testing compliance with TLS profiles for how you're exposing your REST services. Sure, you can fake that in postman, but right way to test is via other approach -- guides via NIST/NSA to test -- look at type of testing being done. If it's API, known input, known output, that's where postman is good, even if it's a NxN workflow...
[2022-01-25T21:36:05.514Z]	<manu>	mprorock: Reporter format is important when logging stuff out -- there are a number of out of the box reporters, you can change output -- can adopt conventions in logging -- provider A logging against provider B -- specify that against logging format. We will probably adopt custom report format, ensure credentials or key material get into logs of test run.
[2022-01-25T21:36:30.708Z]	<manu>	mprorock: We don't want that to leak info, so a bit of legwork, but not a terrible amount of work, fairly minimal. Once that's logged out, on trace side, we're logging out to JSOn and HTML.
[2022-01-25T21:36:42.667Z]	<manu>	mprorock: We also support logging to CSV and command line output live
[2022-01-25T21:37:29.323Z]	<manu>	mprorock: So, we have optionality in CI, output JSON, do nice HTML wrapper... but if we want to pull it into an analysis toolkit... is API slowing down when accessing private key material, look at response times, analyze -- but from system behavior standpoint, how did v1 compare to v2... how did that behave?
[2022-01-25T21:37:33.784Z]	<Markus_Sabadello>	present+
[2022-01-25T21:38:00.850Z]	<manu>	manu: Do you have an example of output?
[2022-01-25T21:39:53.388Z]	<mprorock>	https://www.youtube.com/watch?v=hy4GKO5mIoA
[2022-01-25T21:40:13.553Z]	<mprorock>	manu: important to get to the deep level of detail and roll up as needed
[2022-01-25T21:40:26.233Z]	<mprorock>	https://youtu.be/hy4GKO5mIoA?t=157
[2022-01-25T21:41:00.637Z]	<mprorock>	... ideally we want to see a matrix that shows vendors across top with yellow green red, as well as details
[2022-01-25T21:41:17.891Z]	<mprorock>	... don't know what the general pattern is yet
[2022-01-25T21:41:46.361Z]	<mprorock>	... maybe the lesson is that there is no silver bullet
[2022-01-25T21:41:52.043Z]	<mprorock>	q?
[2022-01-25T21:41:58.129Z]	<mprorock>	q+
[2022-01-25T21:44:48.347Z]	<Juan_Caballero_(Spruce)>	mprorock: in this video that i linked to above, you can see three different report-out formats
[2022-01-25T21:44:53.074Z]	<Juan_Caballero_(Spruce)>	scribe+
[2022-01-25T21:44:58.085Z]	<Juan_Caballero_(Spruce)>	mprorock: in this video that i linked to above, you can see three different report-out formats
[2022-01-25T21:45:07.875Z]	<Juan_Caballero_(Spruce)>	... first there's the output of the console log
[2022-01-25T21:45:17.707Z]	<Juan_Caballero_(Spruce)>	... then there's the pie-chart that shows per-vendor passes and fails
[2022-01-25T21:46:02.253Z]	<Juan_Caballero_(Spruce)>	... then there's this NxN circle diagram (the circle showing each NxN) and the e2e/"BI"-style flow diagram
[2022-01-25T21:47:00.199Z]	<Juan_Caballero_(Spruce)>	... fundamentally, the contents of the console log generated all the others deterministically; furthermore, since we were using postman, there was also some logging and metrics about response times and HTTP header dumps, etc
[2022-01-25T21:47:57.739Z]	<Juan_Caballero_(Spruce)>	... matrix-style can be made from what i believe were MOCHA tests just to make an apples-to-apples across vendors (shown at min4sec11)
[2022-01-25T21:48:15.258Z]	<Troy_Ronda>	present+
[2022-01-25T21:48:30.605Z]	<Juan_Caballero_(Spruce)>	... X-axis on this slide was % but didn't need to be, could've been labelling each test by name or number
[2022-01-25T21:48:43.941Z]	<Juan_Caballero_(Spruce)>	manu: how automatable is all this, tho?
[2022-01-25T21:49:13.870Z]	<Juan_Caballero_(Spruce)>	mprorock: I think I commited the code that generated all this somewhere... it's 100% automatable if you're logging all the req'd inputs in a parseable format
[2022-01-25T21:49:26.202Z]	<Juan_Caballero_(Spruce)>	... i believe this was built from postman log files (CSVs?)
[2022-01-25T21:49:59.669Z]	<Juan_Caballero_(Spruce)>	... min4sec25 - this slide was set up as a workflow 2 weeks before the plugathon and left it re-running chron-ologically
[2022-01-25T21:50:12.868Z]	<Juan_Caballero_(Spruce)>	Manu: next steps - how coordinate? how to do this in the next SVIP plugathon?
[2022-01-25T21:50:13.058Z]	<mprorock>	manu: how do we coordinate this stuff
[2022-01-25T21:50:30.046Z]	<mprorock>	... would be a real shame if we had a bunch of diff ways of showing capabilities
[2022-01-25T21:50:52.588Z]	<mprorock>	... seems like matrix type testing shoudl be trivial with postman
[2022-01-25T21:53:23.472Z]	<mprorock>	manu: seems like a commitment from DB to work with mesur to line up an output format
[2022-01-25T21:53:34.239Z]	<mprorock>	... then try to generate smae kind of output
[2022-01-25T21:54:07.965Z]	<mprorock>	... if we can do that , then we can generate NxN style reports and include them as needed elsewhere such as in respec
[2022-01-25T21:54:24.713Z]	<mprorock>	... not sure how we get to the fancy stuff, aside from collecting enough data
[2022-01-25T21:54:46.752Z]	<mprorock>	... hearing that you (mesur) also want to get to a common format
[2022-01-25T21:54:58.441Z]	<mprorock>	... and if we can do that we should be able to get to a common roll up
[2022-01-25T21:55:21.641Z]	<manu>	mprorock: Yes, 100% commitment onour side -- Chris is our test person - can put them in touch w/ you.
[2022-01-25T21:56:03.006Z]	<manu>	mprorock: Getting common format defined, we have good models -- EARL isn't perfect, good indicator of what kinds of data are collected and typical labels. For example, postman, had to add stuff to logger to get it to handle how we wanted.
[2022-01-25T21:56:58.181Z]	<manu>	mprorock: Report writer for mocha, jest, junit -- as long as you feed into report writer, then it's works, then you can throw plotly at it or something else to visualize. Flow/blockage type analysis -- collecting this stuff over time. There's a lot of good benefits for collecting that data over that time w/ that granularity.
[2022-01-25T21:57:23.193Z]	<mprorock>	manu: ok, cool - anyone else interesting in coordinating on modular testing for VC-API?
[2022-01-25T21:57:30.240Z]	<Tobias_Looker>	+1 we are for VC API also
[2022-01-25T21:57:35.877Z]	<mprorock>	... markus - are you interested for did resolution tests as well
[2022-01-25T21:57:59.123Z]	<mprorock>	... Tobias - are you interested in that common output?
[2022-01-25T21:58:12.459Z]	<mprorock>	tobias: seems like a good idea vs bespoke
[2022-01-25T21:58:31.084Z]	<mprorock>	manu: 2min warning - any other thoughts?

