#!/bin/sh
#
# Fetches the raw minutes for cleanup

display_usage() {
    echo "Downloads raw minutes and audio for CCG group meetings."
    echo ""
    echo "Usage: ./download-raw-minutes [-lh] [-d date]"
    echo "  -d [YYYY-MM-DD]     pass date argument"
    echo "  -m [meeting]        pass meeting argument"
    echo "                      (default 'weekly', other option is 'education')"
    echo "  -l                  launch audio and video editors programmatically"
    echo "  -a                  download audio only, no notes"
    echo "  -h                  display help"
    echo ""
    echo "Examples:"
    echo ""
    echo "  ./download-raw-minutes"
    echo "      downloads raw minutes and audio for the current date"
    echo ""
    echo "  ./download-raw-minutes -d 2020-09-29"
    echo "      downloads raw minutes and audio for 29 Sep 2020"
    echo ""
    echo "  ./download-raw-minutes -a -d 2020-09-29"
    echo "      downloads audio only for 29 Sep 2020"
    echo ""
    echo "  ./download-raw-minutes -m education -d 2020-09-29"
    echo "      downloads raw minutes and audio for the education meeting on 29 Sep 2020"
}
AUTO_LAUNCH=false
AUDIO_ONLY=false
CREATE_DIRECTORY=true
MEETING=weekly

for i in "$@"; do
    case $i in
        --)
            display_usage
            exit 0
            ;;
        -h|--help)
            display_usage
            exit 0
            ;;
        -l|--autolaunch)
            shift
            AUTO_LAUNCH=true
        ;;
        -a|--audio)
            shift
            AUDIO_ONLY=true
        ;;
        -d|--date)
            shift
            DATE=$1
            shift
        ;;
        -m|--meeting)
            shift
            MEETING=$1
            shift
        ;;
    esac
done

# Guess the date if it isn't set
if [ -z "$DATE" ]; then
  DATE=`date +%Y-%m-%d`
  echo "No date argument supplied; using $DATE"
fi

# Get the editor commands if the .cfg file exists
[ -f "./publishing.cfg" ] && . ./publishing.cfg

case "$MEETING" in
   "weekly")
     DIRNAME="$DATE"
     ;;
   "education")
     DIRNAME="$DATE-vc-education"
     ;;
   *)
     DIRNAME="$DATE-$MEETING"
     ;;
esac

echo "....Downloading minutes for meeting=$MEETING, date=$DATE"
echo "....Auto launch setting=$AUTO_LAUNCH"
echo "....Audio-only seeting=$AUDIO_ONLY"

# Create the minutes directory if it doesn't already exist
mkdir -p $DIRNAME
# Download raw logs and recordings
if [ "$AUDIO_ONLY" == false ]; then
    echo "....Downloading IRC logs for $MEETING meeting on $DATE..."
    curl -# "https://meet.w3c-ccg.org/archives/w3c-ccg-$MEETING-$DATE-irc.log" > $DIRNAME/irc.log
fi
echo "....Downloading audio recording for $MEETING meeting on $DATE..."
curl -# "https://meet.w3c-ccg.org/archives/w3c-ccg-$MEETING-$DATE.ogg" > $DIRNAME/audio.ogg

echo "Download is finished! Files saved to $DIRNAME..."
echo "To finalize the minutes, clean up the minutes/audio and publish."

if [ "$AUTO_LAUNCH" = true ]; then
  # Edit the IRC log
  $EDITOR $DIRNAME/irc.log &

  # Edit the audio recording
  $WAV_EDITOR $DIRNAME/audio-raw.wav &
fi

# Print out directions on finalizing minutes
echo "  Instructions for editing minutes and audio:"
echo "    https://github.com/w3c-ccg/w3c-ccg.github.io/blob/master/irc_ref.md#edit"
echo "  Instructions for publishing:"
echo "    https://github.com/w3c-ccg/w3c-ccg.github.io/blob/master/irc_ref.md#publishing"

